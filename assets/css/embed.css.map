{"version":3,"file":"css/embed.css","mappings":";;;AA0CA,UAGC,oBADA,WAEA,sBAHA,UAIA,iBCFD,CAzCA,mCAEC,YA4CD,CChDA,QAGC,sDADA,6CAGA,0BACA,cCgFA,iBAHY,CD3EZ,gBC+EA,kBAHc,CD3Ed,gBARA,kBAMA,kBAHA,8BD0DD,CCjDC,cAEC,gDACA,4CAFA,6CDqDF,CChDC,cAEC,sDACA,kDAFA,mDDoDF,CC7CE,qDAEC,4BD8CH,CG3EA,WAEC,qDADA,SAEA,YH8ED,CIofI,yBDrkBJ,WAME,oCH+EA,CACF,CG7EC,4BAGC,eADA,QHgFF,CG5EC,cACC,eH8EF,CG5EE,oBAEC,YADA,cH+EH,CG1EC,qBAIC,mBAHA,kBACA,kBACA,iBH6EF,CG1EE,uBACC,SH4EH,CGzEE,+BACC,2CAIA,gBAFA,OADA,kBAEA,OH4EH,CAxGA,yBAYC,2CAgGD,CKtHA,yCAEC,kBADA,ULyHD,CKtHC,6CAMC,cAJA,YAGA,cADA,iBADA,iBAFA,UL6HF,CMlIA,oCAGC,8CACA,kCAFA,oBADA,gBNuID,CMjIA,gCACC,kCJ8EA,gBAHY,CI1EZ,gBJ8EA,gBAHc,CI1Ed,QNqID,CElDC,iDItFD,gCJ+EC,cAHY,CAIZ,kBF6DC,CACF,CMjIA,mCACC,+CJiEA,kBAHY,CAIZ,oBFmED,CE7DC,iDIzED,mCJkEC,iBAHY,CAIZ,kBFwEC,CACF,CMjIA,mEACC,eNmID,COrKA,qCAEC,mBADA,ePwKD,CQtKA,8CACC,eRmND,CQjNC,sDACC,aRmNF,CQjNE,8DACC,eRmNH,CQ9MA,oCACC,iBRgND,CEjIC,kDMhFD,oCAIE,YRiNA,CACF,CQ9MA,4CAEC,mBADA,eRiND,CE1IC,iDM5DA,qIAGE,cRuMD,CACF,CE/IC,kDM5DA,qIAOE,cRwMD,CACF,CQ5LA,oHACC,aAIA,WAHA,iDR+LD,CEzJC,iDMxCD,oHAUE,gDACA,6BR2LA,CACF,CE/JC,kDMxCD,oHAeE,qBACA,6BR4LA,CACF,CQ1LC,+HACC,iBR4LF,CExKC,kDMjBA,+HAGE,cR0LD,CACF,CQvLC,yIACC,2BRyLF,CEhLC,iDMVA,yIAOE,SADA,SRyLD,CACF,CSnRA,oEAEC,mBADA,eT0RD,CStRA,sCAIC,oBTqRD,CSlRA,2CACC,0DAEA,qBADA,STqRD,CSlRC,sDACC,4DToRF,CSjRC,mDACC,QTmRF,CShRC,iDAEC,sBADA,qBAEA,oDACA,wBTkRF,CIsRI,aK5iBH,iDAOE,sBTmRD,CACF,CShRC,mDAWC,mBAJA,gBACA,YACA,0CAMA,eALA,aAGA,SADA,8BANA,SAFA,gBACA,eASA,UTgRF,CS7QE,+FACC,wBT+QH,CS5QE,kHAEC,oDT6QH,CSzQC,kDAKC,OPkBD,iBAHY,COdX,gBPkBD,kBAHc,COjBb,eT4QF,CElPC,iDO9BA,kDPuBA,gBAHY,CAIZ,gBF6PC,CACF,CSxQC,oDAMC,0CADA,gBADA,qCTyQF,CE7PC,iDOhBA,oDAUE,0CADA,gBTyQD,CACF,CEnQC,kDOhBA,oDAeE,0CADA,gBT0QD,CACF,CSvQE,4DACC,cACA,SACA,aTyQH,CI0NI,aKteF,4DAME,cT0QF,CACF,CUhXA,uCACC,iBVkXD,CUhXC,0CACC,SVkXF,CEzRC,iDQtFA,0CAGE,cVgXD,CACF,CE9RC,kDQtFA,0CAOE,cViXD,CACF,CU9WC,yCACC,eVgXF,CWnYA,2CAEC,mBADA,eXsYD,CI8LI,yBOrkBJ,2CAKE,eXsYA,CACF,CIyLI,0BOrkBJ,2CAUE,mBADA,eXwYA,CACF,CWrYC,8CTyEA,iBAHY,CAIZ,kBAHc,CSnEb,eXsYF,CWnYC,wDACC,gBXqYF,CWjYA,8CACC,eXmYD,CWjYC,sDACC,iBACA,iBXmYF,CWjYE,8DACC,eXmYH,CEvUC,iDSpED,8CAaE,aACA,QXkYA,CWhYA,sDAEC,cADA,QXmYD,CWhYC,8DACC,QXkYF,CACF,CEpVC,kDSxCC,sDACC,aX+XD,CACF,CDtbA,osBACC,kBACA,kBCwbD,CDrbA,8aAEC,iBACA,kBAFA,gBa2FW,CbxFX,UCubD,CIqII,yBLhkBJ,8aASE,eCsbA,CACF,CIgII,yBLhkBJ,8aAaE,eCubA,CACF,CI2HI,0BLhkBJ,8aAiBE,gBCwbA,CACF,CIsHI,0BLhkBJ,8aAqBE,gBCybA,CACF,CIiHI,yBLviBJ,+RAKE,eACA,eCqbA,CACF,CDlbA,mCAGC,oBADA,WAEA,sBAHA,UAIA,iBCobD,Ca9dC,yCXmFA,iBAHY,CAIZ,kBAHc,CWhFb,gBACA,SbkeF,Ca5dA,gCAKC,uDAHA,mBADA,gBAGA,oBADA,gBbgeD,Ca5dC,6CACC,aACA,eACA,cACA,6Bb8dF,CIiFI,yBSnjBH,6CAOE,Yb+dD,CACF,CI4EI,0BSnjBH,6CAWE,ebgeD,CACF,CIuEI,yBSpiBH,yCAGE,Yb8dD,CACF,CAreA,8NAGC,yBAueD,CAleA,mFAGC,sBAqeD,CAleA,mCACC,cAqeD,C","sources":["webpack://@rrze/fau-studium-embed/./resources/scss/base/_base.scss","webpack://@rrze/fau-studium-embed/./resources/scss/embed.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/_link.scss","webpack://@rrze/fau-studium-embed/./resources/scss/abstracts/_mixins.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/_details.scss","webpack://@rrze/fau-studium-embed/./node_modules/include-media/dist/_include-media.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_featured-image.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_heading.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_entry-text.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_details.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_acccordion.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_combinations.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_more-information.scss","webpack://@rrze/fau-studium-embed/./resources/scss/abstracts/_variables.scss","webpack://@rrze/fau-studium-embed/./resources/scss/components/single-degree-program/_links.scss"],"sourcesContent":["@use \"../abstracts/config\";\n\n%container-paddings {\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n}\n\n%container {\n\tmax-width: config.$max-width;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 100%;\n\n\t@extend %container-paddings;\n\n\t@include config.media(\">tablet\") {\n\t\tmax-width: 750px;\n\t}\n\n\t@include config.media(\">tablet-lg\") {\n\t\tmax-width: 970px;\n\t}\n\n\t@include config.media(\">laptop\") {\n\t\tmax-width: 1200px;\n\t}\n\n\t@include config.media(\">desktop\") {\n\t\tmax-width: 1400px;\n\t}\n}\n\n%container-mobile-full-width {\n\n\t@extend %container;\n\n\t@include config.media(\"<=tablet\") {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t}\n}\n\n.fau-icon {\n\twidth: 1em;\n\theight: 1em;\n\tdisplay: inline-flex;\n\tvertical-align: middle;\n\tfill: currentcolor;\n}\n","// stylelint-disable no-invalid-position-at-import-rule\n@use \"abstracts/config\";\n@use \"base/base\";\n\n.wp-embed-heading,\n.wp-embed-footer {\n\tdisplay: none;\n}\n\n@import \"components/link\";\n@import \"components/details\";\n\n.c-single-degree-program {\n\n\t@import \"components/single-degree-program/featured-image\";\n\t@import \"components/single-degree-program/heading\";\n\t@import \"components/single-degree-program/entry-text\";\n\t@import \"components/single-degree-program/details\";\n\t@import \"components/single-degree-program/about\";\n\t@import \"components/single-degree-program/acccordion\";\n\t@import \"components/single-degree-program/combinations\";\n\t@import \"components/single-degree-program/more-information\";\n\t@import \"components/single-degree-program/links\";\n\n\tcontainer: single-degree-program / inline-size;\n\n\t.l-container {\n\n\t\t@extend %container-paddings;\n\t}\n}\n\n.l-details-wrapper.l-details-wrapper--has-application-links:not(.l-details-wrapper--has-details) .l-application-links,\n.l-details-wrapper.l-details-wrapper--has-details.l-details-wrapper--has-application-links,\n.c-accordion {\n\tmax-width: unset !important;\n}\n\n\n// Hide unsupported elements\n.c-single-degree-program__video,\n.c-single-degree-program__featured-video,\n.fau-icon {\n\tdisplay: none !important;\n}\n\n.c-single-degree-program .c-detail {\n\tpadding-left: 0;\n}\n","@use \"../abstracts/config\";\n\n.c-link {\n\tpadding: 15px 30px;\n\tborder-radius: config.border-radius(\"buttons\");\n\tborder: solid 1px config.color(\"content\", \"borders\");\n\ttext-decoration: none !important;\n\tbox-shadow: none !important;\n\tdisplay: block;\n\ttext-align: center;\n\tfont-weight: 700;\n\tmax-width: 500px;\n\n\t@include config.text-size(\"xl\");\n\n\t&--dark {\n\t\tcolor: config.color(\"button\", \"text\") !important;\n\t\tbackground-color: config.color(\"button\", \"bg\");\n\t\tborder-color: config.color(\"button\", \"bg\");\n\t}\n\n\t&:hover {\n\t\tcolor: config.color(\"button\", \"hover-text\") !important;\n\t\tbackground-color: config.color(\"button\", \"hover-bg\");\n\t\tborder-color: config.color(\"button\", \"hover-bg\");\n\t}\n\n\t&:not(:hover) {\n\n\t\t&:focus,\n\t\t&:active {\n\t\t\tcolor: currentcolor !important;\n\t\t}\n\t}\n}\n","@use \"sass:selector\";\n@use \"sass:list\";\n@use \"sass:string\";\n@use \"sass:math\";\n@use \"sass:map\";\n@use \"functions\";\n@use \"variables\";\n@use \"./breakpoints\";\n\n/// Make a context based selector a little more friendly\n/// @author Kitty Giraudel\n/// @param {String[]} $context\n@mixin when-inside($contexts...) {\n\n\t@each $context in $contexts {\n\t\t#{$context} & {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n/// Create root selector when parent state is changed\n/// Parent must be defined if it's a complex selector (included space)\n/// or for BEM style.\n/// @param {String} $selector - New parent selector\n/// @param {String} $parent - Get first item from selector list\n@mixin when-parent-matches-selector($selector, $parent: null) {\n\t$calculatedParent: list.nth(list.nth(selector.parse(&), 1), 1);\n\n\t@if not $parent {\n\t\t$parent: $calculatedParent;\n\t}\n\n\t$parentSelector: #{functions.replace(\"#{&}\", \"#{$parent}\", \"#{$parent}#{$selector}\")};\n\n\t@if $calculatedParent == \"#{&}\" {\n\t\t$parentSelector: \"#{$parent}#{$selector} #{&}\";\n\t}\n\n\t@at-root #{$parentSelector} {\n\t\t@content;\n\t}\n}\n\n@mixin aspect-ratio($width, $height) {\n\n\t&::before {\n\t\tfloat: left;\n\t\tpadding-top: math.percentage(math.div($height, $width));\n\t\tcontent: \"\";\n\t}\n\n\t&::after {\n\t\tdisplay: block;\n\t\tcontent: \"\";\n\t\tclear: both;\n\t}\n\n\t@supports (aspect-ratio: #{$width} / #{$height}) {\n\t\taspect-ratio: #{$width} / #{$height};\n\n\t\t&::before,\n\t\t&::after {\n\t\t\tcontent: unset;\n\t\t}\n\t}\n}\n\n@mixin object-cover {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: cover;\n}\n\n@mixin text-size($size) {\n\t$map: map.get(variables.$fontSizesMap, $size);\n\n\t@if type-of($map) != \"map\" {\n\n\t\t@error \"Font size not defined\";\n\t}\n\n\t$font-size: map.get($map, \"font-size\");\n\t$line-height: map.get($map, \"line-height\");\n\n\tfont-size: $font-size;\n\tline-height: $line-height;\n}\n\n/// Container query with the \"width great than\" condition\n@mixin container-gt($breakpoint, $container: \"\") {\n\n\t@container #{$container} (width > #{map.get(breakpoints.$breakpoints, $breakpoint)}) {\n\t\t@content;\n\t}\n}\n\n@mixin screen-reader-text {\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px);\n\tclip-path: inset(50%);\n\theight: 1px;\n\tmargin: -1px;\n\toverflow: hidden;\n\tpadding: 0;\n\tposition: absolute !important;\n\twidth: 1px;\n\tword-wrap: normal !important;\n\tword-break: normal;\n}\n","@use \"../abstracts/config\";\n\n.c-details {\n\tmargin: 0;\n\tbackground-color: config.color(\"ContentRegions\");\n\tpadding: 10px;\n\n\t@include config.media(\">tablet\") {\n\t\tborder-radius: config.border-radius();\n\t}\n\n\tdt,\n\tdd {\n\t\tmargin: 0;\n\t\tdisplay: inline;\n\t}\n\n\tdt {\n\t\tfont-weight: 700;\n\n\t\t&::after {\n\t\t\tdisplay: inline;\n\t\t\tcontent: \":\";\n\t\t}\n\t}\n\n\t.c-detail {\n\t\tmargin-bottom: 5px;\n\t\tpadding-left: 24px;\n\t\tposition: relative;\n\t\tbreak-inside: avoid;\n\n\t\tp {\n\t\t\tpadding: 0;\n\t\t}\n\n\t\t.fau-icon {\n\t\t\tfill: config.color(\"branding\", \"primary\");\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 5px;\n\t\t\tbackground: none;\n\t\t}\n\t}\n}\n","//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v2.0.0\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n@charset \"UTF-8\";\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:string';\n@use 'sass:meta';\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x':\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x':\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if meta.feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map.has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not list.index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if string.index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if string.length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $value: string.slice($expression, $operator-index + string.length($operator));\n\n  @if map.has-key($breakpoints, $value) {\n    $value: map.get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map.get($unit-intervals, math.unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map.has-key($media-expressions, $expression) {\n    @return map.get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: list.length($list)) {\n  @if list.length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: list.append($result, list.nth($list, $i), comma);\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n\n@function to-number($value) {\n  @if meta.type-of($value) == 'number' {\n    @return $value;\n  } @else if meta.type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: string.slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: (\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: string.slice($value, 2);\n  }\n\n  @for $i from 1 through string.length($value) {\n    $character: string.slice($value, $i, $i);\n\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map.get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map.get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    'px': 1px,\n    'cm': 1cm,\n    'mm': 1mm,\n    '%': 1%,\n    'ch': 1ch,\n    'pc': 1pc,\n    'in': 1in,\n    'em': 1em,\n    'rem': 1rem,\n    'pt': 1pt,\n    'ex': 1ex,\n    'vw': 1vw,\n    'vh': 1vh,\n    'vmin': 1vmin,\n    'vmax': 1vmax,\n  );\n\n  @if not list.index(map.keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map.get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and list.length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and list.length($conditions) > 0) {\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@use \"../../abstracts/config\";\n\n&__featured-image {\n\twidth: 100%;\n\tposition: relative;\n\n\timg {\n\t\twidth: 100%;\n\t\theight: auto;\n\t\tobject-fit: cover;\n\t\tmax-width: 1400px;\n\t\tmargin: 0 auto;\n\t\tdisplay: block;\n\t}\n}\n","@use \"../../abstracts/config\";\n\n.l-heading {\n\tpadding-top: 30px;\n\tpadding-bottom: 30px;\n\tbackground-color: config.color(\"hero\", \"bg\");\n\tcolor: config.color(\"hero\", \"text\");\n}\n\n&__title {\n\tcolor: config.color(\"hero\", \"text\");\n\tfont-weight: 400;\n\tmargin: 0;\n\n\t@include config.text-size(\"2xl\");\n\n\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\n\t\t@include config.text-size(\"3xl\");\n\t}\n}\n\n&__subtitle {\n\tcolor: config.color(\"primary\", \"basis-kontrast\");\n\n\t@include config.text-size(\"lg\");\n\n\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\n\t\t@include config.text-size(\"xl\");\n\t}\n}\n\n&__title + &__subtitle {\n\tmargin-top: 15px;\n}\n","&__entry-text {\n\tmargin-top: 20px;\n\tmargin-bottom: 30px;\n}\n","@use \"../../abstracts/config\";\n@use \"../../base/base\";\n\n.l-application-links {\n\tmargin-top: 30px;\n\n\t.c-link {\n\t\tmargin: 0 auto;\n\n\t\t+ .c-link {\n\t\t\tmargin-top: 10px;\n\t\t}\n\t}\n}\n\n.c-details {\n\tpadding: 20px 15px;\n\n\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\t\tpadding: 30px;\n\t}\n}\n\n.l-details-wrapper {\n\tmargin-top: 30px;\n\tmargin-bottom: 30px;\n}\n\n.l-details-wrapper.l-details-wrapper--has-details:not(.l-details-wrapper--has-application-links) {\n\n\t.l-details {\n\n\t\t@extend %container-mobile-full-width;\n\t}\n\n\t.c-details {\n\n\t\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\t\t\tcolumns: 30px 2;\n\t\t}\n\n\t\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\t\t\tcolumn-count: 3;\n\t\t}\n\t}\n}\n\n.l-details-wrapper.l-details-wrapper--has-application-links:not(.l-details-wrapper--has-details) {\n\n\t.l-application-links {\n\n\t\t@extend %container;\n\t}\n}\n\n.l-details-wrapper.l-details-wrapper--has-details.l-details-wrapper--has-application-links {\n\tdisplay: grid;\n\tgrid-template-areas:\n\t\t\"details\"\n\t\t\"application-links\";\n\tgap: 0 25px;\n\n\t@extend %container-mobile-full-width;\n\n\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\t\tgrid-template-areas: \"details application-links\";\n\t\tgrid-template-columns: 1fr 1fr;\n\t}\n\n\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\t\tgrid-column-gap: 40px;\n\t\tgrid-template-columns: 2fr 1fr;\n\t}\n\n\t.l-details {\n\t\tgrid-area: details;\n\t}\n\n\t.c-details {\n\n\t\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\t\t\tcolumns: 40px 2;\n\t\t}\n\t}\n\n\t.l-application-links {\n\t\tgrid-area: application-links;\n\n\t\t@extend %container-paddings;\n\n\t\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}\n","@use \"../../abstracts/config\";\n\n&__accordion {\n\tmargin-top: 30px;\n\tmargin-bottom: 30px;\n}\n\n.c-accordion {\n\n\t@extend %container-mobile-full-width;\n\n\tlist-style-type: none;\n}\n\n.c-accordion-item {\n\tborder-top: solid 1px config.color(\"content\", \"borders\");\n\tpadding: 0;\n\tlist-style-type: none;\n\n\t&:last-child {\n\t\tborder-bottom: solid 1px config.color(\"content\", \"borders\");\n\t}\n\n\t&__header {\n\t\tmargin: 0;\n\t}\n\n\t&__icon {\n\t\twidth: 24px !important;\n\t\theight: 14px !important;\n\t\tfill: config.color(\"primary\", \"dunkler\") !important;\n\t\ttransition: transform 0.5s;\n\n\t\t@include config.media(\"print\") {\n\t\t\tdisplay: none !important;\n\t\t}\n\t}\n\n\t&__button {\n\n\t\t@extend %container-paddings;\n\n\t\tmin-height: 80px;\n\t\tpadding: 15px 0;\n\t\tmargin: 0;\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcolor: config.color(\"content\", \"headlines\");\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tgap: 10px;\n\t\twidth: 100%;\n\t\tcursor: pointer;\n\n\t\t&[aria-expanded=\"true\"] .c-accordion-item__icon {\n\t\t\ttransform: rotate(180deg);\n\t\t}\n\n\t\t&:hover,\n\t\t&:focus {\n\t\t\tbackground-color: config.color(\"ContentRegions\");\n\t\t}\n\t}\n\n\t&__title {\n\n\t\t@include config.text-size(\"xl\");\n\n\t\ttext-align: left;\n\t\tflex: 1;\n\t\tfont-weight: 500;\n\n\t\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\n\t\t\t@include config.text-size(\"2xl\");\n\t\t}\n\t}\n\n\t&__content {\n\n\t\t@extend %container-paddings;\n\n\t\ttransition: height 0.5s, padding-top 0.5s;\n\t\toverflow: hidden;\n\t\theight: calc(var(--content-height) + 30px);\n\n\t\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\t\t\tpadding-top: 15px;\n\t\t\theight: calc(var(--content-height) + 30px + 15px);\n\t\t}\n\n\t\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\t\t\tpadding-top: 25px;\n\t\t\theight: calc(var(--content-height) + 30px + 25px);\n\t\t}\n\n\t\t&[hidden] {\n\t\t\tdisplay: block;\n\t\t\theight: 0;\n\t\t\tpadding-top: 0;\n\n\t\t\t@include config.media(\"print\") {\n\t\t\t\theight: inherit;\n\t\t\t}\n\t\t}\n\t}\n}\n","@use \"../../abstracts/config\";\n\n&__combinations {\n\tmargin-bottom: 1em;\n\n\th3 {\n\t\tpadding: 0;\n\t}\n\n\tul {\n\n\t\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\t\t\tcolumn-count: 2;\n\t\t}\n\n\t\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\t\t\tcolumn-count: 3;\n\t\t}\n\t}\n\n\tp {\n\t\tmargin-top: 0.5em;\n\t}\n}\n","@use \"../../abstracts/config\";\n\n&__more-information {\n\tmargin-top: 40px;\n\tmargin-bottom: 60px;\n\n\t@include config.media(\">tablet\") {\n\t\tmargin-top: 30px;\n\t}\n\n\t@include config.media(\">laptop\") {\n\t\tmargin-top: 60px;\n\t\tmargin-bottom: 60px;\n\t}\n\n\th2 {\n\n\t\t@include config.text-size(\"xl\");\n\n\t\tmargin: 0 0 20px;\n\t}\n\n\tp:last-child {\n\t\tpadding-bottom: 0;\n\t}\n}\n\n.l-information-links {\n\tmargin-top: 20px;\n\n\t.c-link {\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\n\t\t+ .c-link {\n\t\t\tmargin-top: 10px;\n\t\t}\n\t}\n\n\t@include config.container-gt(\"tablet\", \"single-degree-program\") {\n\t\tdisplay: flex;\n\t\tgap: 20px;\n\n\t\t.c-link {\n\t\t\tmargin: 0;\n\t\t\tflex: 1 0 auto;\n\n\t\t\t+ .c-link {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t@include config.container-gt(\"laptop\", \"single-degree-program\") {\n\n\t\t.c-link {\n\t\t\tflex: 0 1 auto;\n\t\t}\n\t}\n}\n","$colorsMap: (\n\n\t\"primary\":\n\t(\n\t\t\"basis\": #04316a,\n\t\t\"basis-kontrast\": #fff,\n\t\t\"ci-hell\": #04316a,\n\t\t\"ci-hell-kontrast\": #fff,\n\t\t\"ci-hell2\": #ced9e7,\n\t\t\"ci-hell2-kontrast\": #000,\n\t\t\"dunkler\": #004a9f,\n\t\t\"dunkler-kontrast\": #fff,\n\t\t\"dunkelste\": #041e42,\n\t\t\"dunkelste-kontrast\": #fff,\n\t),\n\n\t\"button\":\n\t(\n\t\t\"text\": #fff,\n\t\t\"bg\": #004a9f,\n\t\t\"hover-text\": #fff,\n\t\t\"hover-bg\": #041e42,\n\t),\n\t\"ghostbutton\": (\n\t\t\"hover-text\": #fff,\n\t\t\"hover-bg\": #04316a,\n\t),\n\n\t\"branding\":\n\t(\n\t\t\"primary\": #04316a,\n\t\t\"zentral\": #04316a,\n\t\t\"phil\": #fdb735,\n\t\t\"med\": #18b4f1,\n\t\t\"nat\": #7bb725,\n\t\t\"rw\": #c50f3c,\n\t\t\"tf\": #8c9fb1,\n\t),\n\n\t\"content\": (\n\t\t\"headlines\": #222,\n\t\t\"borders\": #dfe6ec\n\t),\n\t\"ContentRegions\": #f5f7f9,\n\n\t\"grey\":\n\t(\n\t\t\"light\": #f5f5f5,\n\t\t\"muted\": #e4e4e4,\n\t),\n\n\t\"hero\":\n\t(\n\t\t\"bg\": #04316a,\n\t\t\"text\": #fff,\n\t)\n);\n\n// Font sizes\n$fontSizesMap: (\n\t\"xxs\": (\n\t\t\"font-size\": 0.625rem,\n\t\t\"line-height\": 0.75rem,\n\t),\n\t\"xs\": (\n\t\t\"font-size\": 0.75rem,\n\t\t\"line-height\": 0.875rem,\n\t),\n\t\"sm\": (\n\t\t\"font-size\": 0.875rem,\n\t\t\"line-height\": 1rem,\n\t),\n\t\"base\": (\n\t\t\"font-size\": 1rem,\n\t\t\"line-height\": 1.125rem,\n\t),\n\t\"lg\": (\n\t\t\"font-size\": 1.125rem,\n\t\t\"line-height\": 1.375rem,\n\t),\n\t\"xl\":(\n\t\t\"font-size\": 1.25rem,\n\t\t\"line-height\": 1.5rem,\n\t),\n\t\"2xl\":(\n\t\t\"font-size\": 1.5rem,\n\t\t\"line-height\": 2rem,\n\t),\n\t\"2.5xl\":(\n\t\t\"font-size\": 1.75rem,\n\t\t\"line-height\": 2rem,\n\t),\n\t\"3xl\":(\n\t\t\"font-size\": 2rem,\n\t\t\"line-height\": 2.5rem,\n\t),\n);\n\n// Layout\n$max-width: 1400px;\n\n// Border radius\n$borderRadius: (\n\t\"default\": 0,\n\t\"buttons\": 0,\n);\n","@use \"../../abstracts/config\";\n@use \"../../base/base\";\n\n.c-links {\n\n\t&__title {\n\t\tmargin: 0 0 15px;\n\t\tpadding: 0;\n\n\t\t@include config.text-size(\"xl\");\n\t}\n}\n\n&__links {\n\tmargin-top: 60px;\n\tmargin-bottom: 30px;\n\tpadding-top: 30px;\n\tpadding-bottom: 30px;\n\tbackground-color: config.color(\"primary\", \"ci-hell2\");\n\n\t.l-container {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 30px 20px;\n\t\tjustify-content: space-between;\n\n\t\t@include config.media(\">tablet\") {\n\t\t\trow-gap: 40px;\n\t\t}\n\n\t\t@include config.media(\">laptop\") {\n\t\t\tcolumn-gap: 40px;\n\t\t}\n\t}\n\n\t.c-links {\n\n\t\t@include config.media(\">mobile\") {\n\t\t\tflex: 1 1 30%;\n\t\t}\n\t}\n}\n"],"names":[],"sourceRoot":""}